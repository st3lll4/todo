services:
  todo-frontend:
    build:
      context: ../todo-frontend
      dockerfile: Dockerfile
    container_name: "todo-frontend"
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5066/api 
    ports:
      - "3000:3000"
    volumes:
      - ../todo-frontend:/app          
      - /app/node_modules             
      - /app/.next
    networks:
      - infra
    depends_on:
      - todo-backend

  postgres:
    container_name: "todo_postgres"
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=tod0p4ssw0rd
      - POSTGRES_DB=todolist
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d todolist -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "7890:5432"  
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - infra

  todo-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "todo-backend"
    restart: unless-stopped
    ports:
      - "5066:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker 
    networks:
      - infra

volumes:
  postgres-data:

networks:
  infra:
    driver: bridge